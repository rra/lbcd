.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.22)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "LBCDCLIENT 1"
.TH LBCDCLIENT 1 "2012-09-20" "3.4.0" "lbcd"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
lbcdclient \- Query a remote lbcd daemon for system load
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
lbcdclient [\fB\-2\fR] [\fB\-s\fR \fIservice\fR[,\fIservice\fR ...]] \fIhost\fR ...
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBlbcdclient\fR sends a query packet to a remote \fBlbcd\fR server and prints the
results.  The result output will look something like this:
.PP
.Vb 6
\&    btime 1092858021 ctime 1092960298 utime 1092955199
\&    load l1 96 l5 69 l15 57
\&    total 0 unique 0 console 0
\&    tmp full 0 P_tmpdir full 2
\&    services 0 pads 0 0
\&    service 0: weight 1 increment 1
.Ve
.PP
btime is the time of the last system boot in seconds since epoch.  ctime is
the current system time in seconds since epoch.  utime is the last
modification time of the information about logged in users in seconds since
epoch.
.PP
The load line gives the one-minute (l1), five-minute (l5), and
fifteen-minute (l15) load averages, multiplied by 100.
.PP
The next line gives the count of logged-in users.  total gives the count of
all logged-in users, unique lists the total number of unique users, and
console is 1 if a user is logged in to the console of the system.
.PP
tmp full is the percentage used in the system \fI/tmp\fR directory and P_tmpdir
full is the percentage full in the system \fI/var/tmp\fR directory.
.PP
Finally, the last lines give information for each service, using the
extended service response for the version three packet format.  The first
line gives the count of number of configured services minus one.  (The pads
numbers are reserved space in the packet and will generally always be zero.)
Then, each subsequent line lists the weights and increments for each service
\&\fBlbcd\fR is monitoring on the system.
.PP
If the \fB\-2\fR option is used, \fBlbcdclient\fR will send a version two packet
instead, and the returned results will not include the services line and
everything after that.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-2\fR" 4
.IX Item "-2"
Send a version two protocol packet instead of a version three packet.
Version two doesn't support the separate service weights.
.IP "\fB\-s\fR \fIservice\fR,[\fIservice\fR ...]" 4
.IX Item "-s service,[service ...]"
Request information for the specified service names.  It's not entirely
clear whether this works correctly.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIlbcd\fR\|(8)
.PP
The current version of this program is available from its web page at
<http://www.eyrie.org/~eagle/software/lbcd/>.
.SH "AUTHORS"
.IX Header "AUTHORS"
Written by Larry Schwimmer.  Currently maintained by Russ Allbery
<rra@stanford.edu>.
